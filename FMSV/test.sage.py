

# This file was *autogenerated* from the file test.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_10 = Integer(10)
def reduced_char_poly(M):
    return char_poly(M) // (x - _sage_const_1 )

def char_poly(M):
    T = M.tutte_polynomial()
    x = var('x')
    subbed_Tpoly = T.subs(x = _sage_const_1  - x, y = _sage_const_0 )
    char_poly = (-_sage_const_1 ) ** M.rank() * subbed_Tpoly
    R = PolynomialRing(QQ, 'x')

    return R(char_poly)

l = [(i,j) for i in range(_sage_const_1 , _sage_const_10 ) for j in range(_sage_const_1 , i+_sage_const_1 )]

for i, j in l:
    M = matroids.Uniform(j, i)
    cp = char_poly(M)
    print("U(",j,i, ")", cp, ",", cp//(x-_sage_const_1 ))

